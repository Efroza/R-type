Protocol for R-Type
Every message send by the client will be accompanied with the id of the player
Every message send by the server will be accompanied with the id of the client it is talking to.

The server use both TCP and UDP, when in wait for game to start, it is TCP, when in game it is UDP

-------------------------------------------------------

Client to server with server response:
    CONNECTED (0) : When user connect to server
     -> (Int32) : Client id
    DISCONNECTED (3) : When user crash or disconnect
     -> OK (Depends if in lobby or not)
    LOBBY (4, Int16) : Waiting for a certain number to start the game
     -> START : if Int16 = 1 (not waiting for player)
     -> X (Wait for player) -> START : When every player connected
    PREPARE_UDP(5) : Waiting for port of UDP
     -> UDP : 

Client to server with no server response :
    DIRECTION (1, ENUM (DIRECTION)) : When user move (poistion)
     -> X
    SPEED (2, Int16) : When user change speed (speed +-)
     -> X
    DISCONNECTED (3) : When user crash or disconnect
     -> X (Depends if in lobby or not)

-------------------------------------------------------

Server to client with no client response :
    ENNEMY (1, Int16, Int16, Int16) : When an ennemy spawn (Position + Speed)
    DEAD (2, Int16) : When an user die
    LOSE (3) : No user left, game lost
    WIN (4) : No ennemy left, game win
    HIT (5, Int16) : Player hit (hp lost)
    ENNEMY_DEAD (6, Int16, Int16) : Ennemy dead (Position)
    BONUS (7) : Gain bonus when ennemy dead
    UDP (10) : Transition between tcp and udp when lobby is ready to start

Server to client with client response :
    START (0) : When the game start
     ->  OK
    ALREADY_IN_GAME (8) : When client try to connect to game already started
     -> OK
    LOBBYS (9) : When client connect to server check if lobby exist or not
    -> join lobby or create one